-- 分级授权卡密白名单系统（带指令管理）
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local Chat = game:GetService("Chat")

local player = Players.LocalPlayer
local playerGui = player.PlayerGui

-- ==========================================
-- 配置区域
-- ==========================================
local WHITELISTED_PLAYERS = {
    "你的玩家名称",       -- 替换成你的Roblox用户名
    "AdminUser",         -- 管理员账号
    "TrustedFriend",     -- 其他信任的玩家
    "wuckdfs"            -- 新增的白名单玩家
}

local VALID_KEY = "mc4er736pm"  -- 你的卡密
local MAX_ATTEMPTS = 3          -- 最大尝试次数
local ADMIN_PASSWORD = "your_admin_password"  -- 管理员密码，用于执行指令

-- 放假模式配置
local ENABLE_VACATION_MODE = true  -- 放假模式开关，设置为true开启
local VACATION_END_DATE = os.time({year=2025, month=2, day=28})  -- 放假结束日期

-- ==========================================
-- 创建UI
-- ==========================================
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AuthorizationSystem"
ScreenGui.Parent = playerGui

-- 主窗口
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Position = UDim2.new(0.5, -140, 0.5, -120)
MainFrame.Size = UDim2.new(0, 280, 0, 240)
MainFrame.BackgroundTransparency = 0.1
MainFrame.Visible = false

-- 标题栏（用于拖拽）
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Parent = MainFrame
TitleBar.BackgroundColor3 = Color3.fromRGB(44, 62, 80)
TitleBar.Size = UDim2.new(1, 0, 0, 40)

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = TitleBar
TitleLabel.BackgroundTransparency = 1
TitleLabel.Size = UDim2.new(1, 0, 1, 0)
TitleLabel.Text = "授权验证系统"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextSize = 18
TitleLabel.Font = Enum.Font.SourceSansBold

-- 关闭按钮
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Parent = TitleBar
CloseButton.BackgroundColor3 = Color3.fromRGB(231, 76, 60)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Text = "✕"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18
CloseButton.Font = Enum.Font.SourceSansBold

CloseButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
end)

-- 卡密输入框
local InputBox = Instance.new("TextBox")
InputBox.Name = "InputBox"
InputBox.Parent = MainFrame
InputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
InputBox.Position = UDim2.new(0.05, 0, 0.25, 0)
InputBox.Size = UDim2.new(0.9, 0, 0, 50)
InputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
InputBox.PlaceholderText = "输入卡密以继续"
InputBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
InputBox.TextSize = 16
InputBox.ClearTextOnFocus = false
InputBox.Font = Enum.Font.SourceSans

-- 验证按钮
local VerifyButton = Instance.new("TextButton")
VerifyButton.Name = "VerifyButton"
VerifyButton.Parent = MainFrame
VerifyButton.BackgroundColor3 = Color3.fromRGB(46, 204, 113)
VerifyButton.Position = UDim2.new(0.1, 0, 0.55, 0)
VerifyButton.Size = UDim2.new(0.8, 0, 0, 50)
VerifyButton.Text = "验证并进入"
VerifyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
VerifyButton.TextSize = 16
VerifyButton.Font = Enum.Font.SourceSansBold

-- 状态提示
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = MainFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0, 0, 0.85, 0)
StatusLabel.Size = UDim2.new(1, 0, 0, 20)
StatusLabel.Text = "请输入卡密"
StatusLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
StatusLabel.TextSize = 14
StatusLabel.Font = Enum.Font.SourceSans

-- ==========================================
-- 核心功能
-- ==========================================
local errorCount = 0

-- 本地存储功能
local SavePath = "WindUI/AuthorizationData.json"

local function SaveAuthorization(data)
    pcall(function()
        if not isfolder("WindUI") then
            makefolder("WindUI")
        end
        writefile(SavePath, HttpService:JSONEncode(data))
    end)
end

local function LoadAuthorization()
    if not isfile(SavePath) then return nil end
    
    local success, data = pcall(function()
        local content = readfile(SavePath)
        return HttpService:JSONDecode(content)
    end)
    
    return success and data or nil
end

-- 执行远程脚本
local function ExecuteRemoteScript()
    pcall(function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/tfcygvunbind/Apple/main/%E9%BB%91%E7%99%BD%E8%84%9A%E6%9C%AC%E6%9C%80%E6%96%B0'))()
    end)
end

-- 检查玩家是否在白名单中
local function IsPlayerWhitelisted(playerName)
    for _, name in ipairs(WHITELISTED_PLAYERS) do
        if name:lower() == playerName:lower() then
            return true
        end
    end
    return false
end

-- 验证卡密
local function VerifyKey(inputKey)
    return inputKey == VALID_KEY
end

-- 验证按钮点击事件
VerifyButton.MouseButton1Click:Connect(function()
    local enteredCode = InputBox.Text
    
    if errorCount >= MAX_ATTEMPTS then
        StatusLabel.Text = "尝试次数已达上限！"
        StatusLabel.TextColor3 = Color3.fromRGB(231, 76, 60)
        return
    end
    
    if VerifyKey(enteredCode) then
        -- 验证成功，保存授权信息
        local authData = {
            PlayerName = player.Name,
            Authorized = true,
            Timestamp = os.time(),
            AuthorizationType = "Key"
        }
        SaveAuthorization(authData)
        
        StatusLabel.Text = "验证成功！正在加载..."
        StatusLabel.TextColor3 = Color3.fromRGB(46, 204, 113)
        
        -- 执行远程脚本
        ExecuteRemoteScript()
        
        -- 关闭窗口
        task.wait(2)
        MainFrame.Visible = false
    else
        errorCount = errorCount + 1
        local remaining = MAX_ATTEMPTS - errorCount
        
        if remaining > 0 then
            StatusLabel.Text = string.format("卡密无效，还有 %d 次机会", remaining)
        else
            StatusLabel.Text = "错误次数过多！"
            task.wait(1)
            player:Kick("连续输入错误卡密")
        end
        StatusLabel.TextColor3 = Color3.fromRGB(231, 76, 60)
    end
end)

-- ==========================================
-- 手机拖拽功能
-- ==========================================
local isDragging = false
local dragStart = nil
local startPos = nil

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
       input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
    end
end)

-- ==========================================
-- 白名单管理指令系统
-- ==========================================
local function AddToWhitelist(playerName)
    if not IsPlayerWhitelisted(playerName) then
        table.insert(WHITELISTED_PLAYERS, playerName)
        return true, "玩家 " .. playerName .. " 已添加到白名单"
    else
        return false, "玩家 " .. playerName .. " 已在白名单中"
    end
end

local function RemoveFromWhitelist(playerName)
    for i, name in ipairs(WHITELISTED_PLAYERS) do
        if name:lower() == playerName:lower() then
            table.remove(WHITELISTED_PLAYERS, i)
            return true, "玩家 " .. playerName .. " 已从白名单移除"
        end
    end
    return false, "玩家 " .. playerName .. " 不在白名单中"
end

local function ListWhitelist()
    local list = "白名单玩家列表:\n"
    for i, name in ipairs(WHITELISTED_PLAYERS) do
        list = list .. i .. ". " .. name .. "\n"
    end
    return list
end

-- 处理聊天指令
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        local args = message:split(" ")
        local command = args[1]:lower()
        
        -- 检查是否为管理员指令
        if command == "/whitelist" or command == "/wl" then
            if #args < 3 then
                player:SendMessage("用法: /whitelist <add/remove/list> <玩家名> [密码]")
                return
            end
            
            local action = args[2]:lower()
            local targetPlayer = args[3]
            local password = args[4]
            
            -- 验证管理员密码
            if password ~= ADMIN_PASSWORD then
                player:SendMessage("错误: 管理员密码不正确")
                return
            end
            
            -- 执行对应操作
            if action == "add" then
                local success, result = AddToWhitelist(targetPlayer)
                player:SendMessage(result)
            elseif action == "remove" then
                local success, result = RemoveFromWhitelist(targetPlayer)
                player:SendMessage(result)
            elseif action == "list" then
                local list = ListWhitelist()
                player:SendMessage(list)
            else
                player:SendMessage("无效操作: " .. action)
                player:SendMessage("可用操作: add, remove, list")
            end
        end
    end)
end)

-- ==========================================
-- 分级授权检查
-- ==========================================
local function CheckAuthorization()
    local playerName = player.Name
    
    -- 0. 检查是否处于放假模式
    if ENABLE_VACATION_MODE then
        -- 检查当前时间是否在放假期间
        local currentTime = os.time()
        if currentTime <= VACATION_END_DATE then
            print("[授权系统] 处于放假模式，所有玩家免验证")
            
            -- 创建放假模式提示
            local VacationNotice = Instance.new("TextLabel")
            VacationNotice.Name = "VacationNotice"
            VacationNotice.Parent = ScreenGui
            VacationNotice.BackgroundTransparency = 1
            VacationNotice.Position = UDim2.new(0.5, -100, 0.5, -20)
            VacationNotice.Size = UDim2.new(0, 200, 0, 40)
            VacationNotice.Text = "假期时间不用卡密"
            VacationNotice.TextColor3 = Color3.fromRGB(46, 204, 113)
            VacationNotice.TextSize = 20
            VacationNotice.Font = Enum.Font.SourceSansBold
            
            -- 3秒后自动隐藏提示
            task.wait(3)
            VacationNotice:Destroy()
            
            ExecuteRemoteScript()
            return true
        else
            print("[授权系统] 放假模式已结束")
        end
    end
    
    -- 1. 检查是否为白名单玩家
    if IsPlayerWhitelisted(playerName) then
        print("[授权系统] 白名单玩家:", playerName)
        ExecuteRemoteScript()
        return true
    end
    
    -- 2. 检查是否已通过卡密验证
    local savedAuth = LoadAuthorization()
    if savedAuth and savedAuth.Authorized and savedAuth.PlayerName == playerName then
        print("[授权系统] 已验证玩家:", playerName)
        ExecuteRemoteScript()
        return true
    end
    
    -- 3. 需要卡密验证
    print("[授权系统] 需要卡密验证:", playerName)
    MainFrame.Visible = true
    return false
end

-- 启动时进行授权检查
CheckAuthorization()
